plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.github.node-gradle.node' version '3.0.1'
}

group = 'ca.mjsanchez'
version = '0.0.1-SNAPSHOT'

node {
 	version = '20.11.1'
    npmVersion = '10.4.0'
    download = true
    workDir = file("${project.projectDir}/path-to-your-react-app")
    nodeModulesDir = file("${project.projectDir}/path-to-your-react-app")

}

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-clients:3.6.1'
	implementation 'com.google.code.gson:gson'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-streams'
}

tasks.named('test') {
	useJUnitPlatform()
}

task npmBuild(type: NpmTask) {
	workingDir = file("${project.projectDir}/front-end/order-fe")
    args = ['run', 'build']

}

task copyReactBuild(type: Copy) {
	// dependsOn npmBuild
    from "${project.projectDir}/front-end/order-fe/build"
    into "${project.projectDir}/src/main/resources/static"
}


processResources.dependsOn copyReactBuild
build.dependsOn copyReactBuild


// build.dependsOn npmBuild

// bootRun.dependsOn copyReactBuild
